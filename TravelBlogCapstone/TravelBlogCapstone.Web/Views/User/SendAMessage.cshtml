@model TravelBlogCapstone.Models.Message

@{
    ViewBag.Title = "SendAMessage";
}

<h2>Send A Message</h2>
<hr />
<div class="row">
    @using (Html.BeginForm("SendAMessage", "User", null, FormMethod.Post, new {@class = "form-horizontal", id = "sendMessageForm"}))
    {
        @Html.AntiForgeryToken()
        <div class="form-group">
            @Html.LabelFor(m => m.SenderUserName, new {@class = "col-xs-3 control-label"})
            <div class="col-xs-8">
                @Html.EditorFor(m => m.SenderUserName, new {htmlAttributes = new {@class = "form-control"}})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Subject, new {@class = "col-xs-3 control-label"})
            <div class="col-xs-8">
                @Html.EditorFor(m => m.Subject, new {htmlAttributes = new {@class = "form-control"}})
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Body, new {@class = "col-xs-3 control-label"})
            <div class="col-xs-8">
                @Html.TextAreaFor(m => m.Body, new {@class = "form-control", id = "bodyMessage"})
            </div>
        </div>
        <div class="form-group">
            <div class="col-sm-offset-3 col-xs-6">
                <input type="submit" value="Send" class="btn btn-primary"/>
            </div>
        </div>
    }
</div>

@section scripts
{

    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/scripts/jquery-validate-defaults.js"></script>

    <script>
        $(document)
            .ready(function() {

                $('#sendMessageForm')
                    .validate({
                        onkeyup: false,
                        rules: {
                            "SenderUserName": {
                                required: true,
                                remote: "/api/User/"
                            },
                            "Subject": {
                                required: true
                            },
                            "Body": {
                                required: true
                            }
                        },
                        messages: {
                            "SenderUserName": {
                                remote: "This Email or User Name is not found"
                            }
                        }
                    });
            });

    </script>
}